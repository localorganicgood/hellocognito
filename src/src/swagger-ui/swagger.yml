  swagger: '2.0'
  info:
    version: '0.0.1'
    title: "Hello App Cognito APIGW Angular"
  basePath: /api
  schemes:
    - https
  consumes:
    - application/json
  produces:
    - application/json
  securityDefinitions:
    myApiUsers:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "cognito_user_pools"
      x-amazon-apigateway-authorizer:
        providerARNs:
          - "arn:aws:cognito-idp:us-east-1:744864561182:userpool/us-east-1_KuXacXoZM"
        type: "cognito_user_pools"
  paths:
    # ===============================================
    /demo:
    # ===============================================
      options:
      # ============================================
         summary: "CORS Support"
         description: "Enable CORS Support"
         responses:
            "200":
               description: "200-OK for OPTIONS"
               schema:
                  $ref: "#/definitions/Empty"
               headers:
                  Access-Control-Allow-Headers:
                     type: "string"
                  Access-Control-Allow-Methods:
                     type: "string"
                  Access-Control-Allow-Origin:
                     type: "string"
         x-amazon-apigateway-integration:
            type: "mock"
            passthroughBehavior: "when_no_match"
            requestTemplates:
               application/json: |
                  {
                     "statusCode": 200
                  }
            responses:
               "default":
                  statusCode: "200"
                  responseParameters:
                     method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                     method.response.header.Access-Control-Allow-Methods: "'*'"
                     method.response.header.Access-Control-Allow-Origin : "'*'"
                  responseTemplates:
                     application/json: |
                        {}

      get:
      # ============================================
         description: "List of Demo Elements"
         parameters:
            -
               name: "Authorization"
               in: "header"
               required: false
               type: "string"
         security:
            - myApiUsers: []
         responses:
            "200":
               description: "200-OK response"
               schema:
                  $ref: "#/definitions/Empty"
               headers:
                  Access-Control-Allow-Headers:
                     type: "string"
                  Access-Control-Allow-Methods:
                     type: "string"
                  Access-Control-Allow-Origin:
                     type: "string"
         x-amazon-apigateway-integration:
            responses:
               "default":
                  statusCode: "200"
                  responseParameters:
                     method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                     method.response.header.Access-Control-Allow-Methods: "'*'"
                     method.response.header.Access-Control-Allow-Origin : "'*'"
            uri:
              Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:SpaAPIGWTest/invocations"
            passthroughBehavior: "when_no_match"
            httpMethod: "POST"
            contentHandling: "CONVERT_TO_TEXT"
            type: "aws"
  definitions:
    Empty:
      type: "object"
      title: "Empty Schema"
